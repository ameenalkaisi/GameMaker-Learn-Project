<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_run</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grv = 1; // Gravity

shk = instance_create(x, y, obj_weapon_shuriken_thrower); // Shuriken thrower
gun = instance_create(x, y, obj_weapon_gun); // Gun
sword = instance_create(x, y, obj_weapon_sword); // Sword;

current_weapon = shk; // Current weapon held

looking_right = true; // Looking right or left

timer_hit = 0; // Hit timer for effects

touching_ground = false; // Touching ground or not

/// Speeds
speed_walk = 4; // Walk speed
speed_x = 0; // Horizontal movement speed
speed_y = 0; // Vertical movement speed

hp = 400; // Health

image_speed = 0.2; // Image changing speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused)
{
    image_speed = 0;
    exit;
}
else
{
    image_speed = 0.2;   
}

//Get the player's input
key_right = keyboard_check(vk_right) || keyboard_check(ord("D"));
key_left = keyboard_check(vk_left) || keyboard_check(ord("A"));
key_jump = keyboard_check_pressed(vk_space);

//React to inputs
var move = key_right - key_left;
speed_x = move * speed_walk;

if(room == room_level_2)
    speed_y = 0;
else
    speed_y += grv;

timer_hit--;

if(hp &lt;= 0)
{
    room_goto(room_level_0);
    global.paused = true;
}

with(current_weapon)
{
    x = other.x;
    y = other.y;    
    
    if(other.current_weapon == other.sword)
        looking_right = other.looking_right;
}

if(timer_hit &gt; 0)
    image_yscale = 3.25;
else
    image_yscale = 3;

if(touching_ground)
{
    if(move != 0) sprite_index = spr_player_run; else sprite_index = spr_player_idle;
    image_speed = 0.2;
}
else
{
    sprite_index = spr_player_jump;
    image_speed = 0;
    if(speed_y &gt; 0) image_index = 1; else image_index = 0;
}

if(move == 1) looking_right = true; else if(move == -1) looking_right = false;
if(looking_right) image_xscale = 1; else image_xscale = -1;

if (place_meeting(x, y+1, obj_wall))
{
    speed_y = key_jump * -14;
    touching_ground = true;
}else touching_ground = false;

//Horizontal Collision
if (place_meeting(x + speed_x, y, obj_wall))
{
    while(!place_meeting(x + sign(speed_x), y, obj_wall))
    {
        x += sign(speed_x);
    }
    speed_x = 0;
}
x += speed_x;

//Vertical Collision
if (place_meeting(x, y + speed_y, obj_wall))
{
    while(!place_meeting(x,y + sign(speed_y), obj_wall))
    {
        y += sign(speed_y);
    }
    speed_y = 0;
}
y += speed_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(timer_hit &gt; 0)
    shader_set(s_hit);
    
draw_self();
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_escape))
{
    game_end();
}

if(keyboard_check_pressed(ord("1")))
{
    with(current_weapon)
    {
        is_equipped = false;
    }    

    with(shk)
    {
        is_equipped = true;    
    }
    
    current_weapon = shk;
}

if(keyboard_check_pressed(ord("2")))
{
    with(current_weapon)
    {
        is_equipped = false;
    }   
    
    with(gun)
    {
        is_equipped = true;  
    }

    current_weapon = gun;
}

if(keyboard_check_pressed(ord("3")))
{
    with(current_weapon)
    {
        is_equipped = false;
    }   
    
    with(sword)
    {
        is_equipped = true;  
    }

    current_weapon = sword;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
