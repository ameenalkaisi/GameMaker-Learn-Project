<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>b_exit_x = 100;
b_exit_y = 200;
b_exit_height = 50;
b_exit_width = 80;
b_exit_text = "Exit";
col_exit_reg = make_color_rgb(0.5, 0.5, 0);
col_exit_hov = make_color_rgb(1, 1, 0);

b_continue_x = 400;
b_continue_y = 200;
b_continue_height = 50;
b_continue_width = 80;
b_continue_text = "Resume";

hovering_exit = false;
hovering_continue = false;

enemy2_max = 4;

spawn_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused)
{
    if(mouse_x &gt; b_continue_x &amp;&amp; mouse_x &lt; b_continue_x + b_continue_width &amp;&amp; mouse_y &gt; b_continue_y
        &amp;&amp; mouse_y &lt; b_continue_y + b_continue_height)
    {
        hovering_continue = true;
    }
    else hovering_continue = false;
    
    if(mouse_x &gt; b_exit_x &amp;&amp; mouse_x &lt; b_exit_x + b_exit_width &amp;&amp; mouse_y &gt; b_exit_y
        &amp;&amp; mouse_y &lt; b_exit_y + b_exit_height)
    {
        hovering_exit = true;
    }
    else hovering_exit = false;
    
    if(hovering_continue &amp;&amp; mouse_check_button_pressed(mb_left))
    {
        global.paused = !global.paused;
    }
    
    if(hovering_exit &amp;&amp; mouse_check_button_pressed(mb_left))
    {
        game_end();
    }
}


if(global.paused) exit;
if(room == room_level_2)
{
    spawn_timer--;
    if(spawn_timer &lt;= 0)
    {
        spawn_timer = 5000;
        for(var i = 0; i &lt; 3; i++)
            instance_create(random_range(160, 600), random_range(0, 300), obj_enemy2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_colour(150, 50, "hp: " + string(obj_player.hp), 0.0, 0.0, 0.0, 0.0, 1.0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused)
{
    draw_text_colour(room_width/2, room_height/2, "PAUSED", c_blue, c_blue, c_blue, c_blue, 1.0);
    
    if(!hovering_exit)    
    {
        draw_rectangle_color(b_exit_x, b_exit_y, b_exit_x + b_exit_width, b_exit_y + b_exit_height, c_red, c_red, c_red, c_red, false);
    }
    else
    {
        draw_rectangle_color(b_exit_x, b_exit_y, b_exit_x + b_exit_width, b_exit_y + b_exit_height, c_teal, c_teal, c_teal, c_teal, false);
    }    
    if(!hovering_continue)    
        draw_rectangle_color(b_continue_x, b_continue_y, b_continue_x + b_continue_width, b_continue_y + b_continue_height, c_red, c_red, c_red, c_red, false);
    else
        draw_rectangle_color(b_continue_x, b_continue_y, b_continue_x + b_continue_width, b_continue_y + b_continue_height, c_teal, c_teal, c_teal, c_teal, false);

    draw_text_colour(b_exit_x + b_exit_width/4, b_exit_y + b_exit_height/4, b_exit_text, 1, 1, 1, 1, 1);
    draw_text_colour(b_continue_x + b_continue_width/4, b_continue_y + b_continue_height/4, b_continue_text, 1, 1, 1, 1, 1);
    draw_text_colour( (b_exit_x + b_continue_x) / 2, (b_exit_y + b_continue_y) / 2, "Level: " + string(global.level), c_green, c_green, c_green, c_green, 1.0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord("P")))
{
    global.paused = !global.paused;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
