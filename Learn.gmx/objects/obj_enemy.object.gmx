<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_run</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grv = 1; // Gravity

looking_right = true; // Looking right or left

should_jump = false; // Should jump for AI 

shk = instance_create(x, y, obj_eweapon_shuriken_thrower); // Shuriken thrower

timer_hit = 0; // Hit timer for effects when hit

touching_ground = false; // Is touching ground or not

// Speeds
speed_walk = 1; // Walking speed
speed_x = 0; // Horizontal movement speed
speed_y = 0; // Vertical movement speed

hp = 5; // Health

image_speed = 0.2; // Image index changing speeds

first_time = true; // Mostly for changing global.enemy_count, since it won't on creation
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused)
{
    image_speed = 0;
    exit;
}
else
{
    image_speed = 0.2;   
}

// Inceases enemy_count on first time run
if(first_time)
{
    global.enemy_count++;
    first_time = false;
}

//React to inputs
var move = 0;

/// Set AI to have 25 gap between player
var player_to_enemy_distance = obj_player.x - x;
if(  player_to_enemy_distance &gt; 25 )
{
    if(timer_hit &gt; 0) move = -1; else move = 1;
}
else if( player_to_enemy_distance &lt; -25)
{
    if(timer_hit &gt; 0) move = 1; else move = -1;
}
else 
{
    move = 0;
}

/// Set shuriken thrower values
with(shk)
{
    if(other.hp &lt;= 0)
        instance_destroy(); // Destroy shuriken thrower if holder is dead

    x = other.x; // Set x location
    y  = other.y; // Set y location
}

// Destroy object when dead
if(hp &lt;= 0)
{
    global.enemy_count = global.enemy_count - 1;
    instance_destroy();
}

// Set move speeds
speed_x = move * speed_walk;
speed_y += grv;

// Timer  count downs
timer_hit--;

/// Point in direction of player
if(point_direction(x, y,  obj_player.x, obj_player.y) &lt; 270
    &amp;&amp; point_direction(x, y,  obj_player.x, obj_player.y) &gt; 90)
{
    image_xscale = -1;
}
else image_xscale = 1;

/// Ground checks and change sprites accordingly
if(touching_ground)
{
    if(move != 0) sprite_index = spr_enemy_run; else sprite_index = spr_enemy_idle;
    image_speed = 0.2;
}
else
{
    sprite_index = spr_enemy_jump;
    image_speed = 0;
    if(speed_y &gt; 0) image_index = 1; else image_index = 0;
}

// If hit timer is started, then change scale of image
if(timer_hit &gt; 0)
{
    image_xscale = sign(image_xscale) * 1.25;
    image_yscale = 3.25;
}
else
    image_yscale = 3;

// Set looking_right bool
if(move == 1) looking_right = true; else if(move == -1) looking_right = false;

// Set to invert image accridngly to looking_right
if(looking_right) image_xscale = 1; else image_xscale = -1;

// Ground collision
if (place_meeting(x, y+1, obj_wall))
{
    speed_y = should_jump * -14;
    touching_ground = true;
}else touching_ground = false;

//Horizontal Collision
if (place_meeting(x + speed_x, y, obj_wall))
{
    while(!place_meeting(x + sign(speed_x), y, obj_wall))
    {
        x += sign(speed_x);
    }
    should_jump = true;
    speed_x = 0;
} else should_jump = false;
x += speed_x;

//Vertical Collision
if (place_meeting(x, y + speed_y, obj_wall))
{
    while(!place_meeting(x,y + sign(speed_y), obj_wall))
    {
        y += sign(speed_y);
    }
    speed_y = 0;
}
y += speed_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(timer_hit &gt; 0)
    shader_set(s_hit);

draw_self();
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
